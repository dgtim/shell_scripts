#!/bin/bash

# a wrapper for the Dell's 'idracadm7' utility, installed as:
#
# curl -O https://linux.dell.com/repo/hardware/dsu/bootstrap.cgi
# bash bootstrap.cgi
# yum install srvadmin-idracadm7
# ln -s /usr/lib64/libssl.so.3.2.2 /usr/lib64/libssl.so
#
# for the deafult path see $racadm below

# Copyright (C) 2025 ivan.tervanto /at/ aalto.fi
# Released under the GNU General Public License

# Note: for the command execution on the nodelist we use
# Tollef Fog Heen's 'parallel' utility from the
# 'moreutils-parallel' rpm

# Note: for the expanding a string like node[12-14,23],gpu6 to
# a list of 'node12 node13 node14 node23 gpu6 ...' we use 'shosts'
# from this the same git repo

# we expect at least two args: the nodelist and a command
if (($#<2)); then
  echo
  echo "usage:  ${0##./} milan[xx-xx,x],gpuxx racadm_command args";
  echo
  echo '  Selected RACADM commands:'
  echo '    tag | getsvctag'
  echo '    sel | getsel -o'
  echo '    tsr  # techsupreport'
  echo '    clrsel'
  echo '    getsysinfo # incl MAC addresses'
  echo '    swinventory'
  echo '    getversion [-f bios|idrac]'
  echo '    serveraction [powercycle|powerdown|powerup|hardreset|powerstatus]'
  echo '    jobqueue view|delete -i <jobid>'
  echo '    racreset  # reset idrac'
  echo '    update -f <filename.EXE>'
  echo '    get -f file.xml -t xml # export config to a file.xml'
  echo '    get BIOS.ProcSettings # CPU settings at BIOS'
  echo '    get BIOS.SysProfileSettings # see SysProfile='
  echo '    get BIOS.BiosBootSettings # boot settings'
  echo '    get System.Power.Realtime.Power'
  echo '    help # raw racadm commands list'
  echo
  exit
fi

# BMC common credentials, the file should have define:
#IPMI_USERNAME=...
#IPMI_PASSWORD=...
bmccredfile='/root/bin/.bmccredentials'
if [ -r "$bmccredfile" ]; then
  source "$bmccredfile"
else
  echo "No $bmccredfile found"
  exit 1
fi

# expand a string like node[12-14,23],gpu6 to a list of 'node12 node13 node14 gpu23 ...'
nodelist=$(/root/bin/shosts $1)
# parallelization, 32 processes as max
parallel='/usr/bin/parallel -j 32 -i'
# default command
racadm="/opt/dell/srvadmin/bin/idracadm7 --nocertwarn -u $IPMI_USERNAME -p $IPMI_PASSWORD -r "
# a subcommand for the 'idracadm7' 
cmd="${*:2}"

# idracadm7 produces quite a bit of garbadge, oneliner to make output cleaner
clean() { tr -d '\r' | awk '{$1=$1};1' | grep -v '^\s*$'; }

# here we redefine $cmd for the aliases like 'sel', 'tag', 'tsr' etc
# the rest goes as is, a raw 'idracadm7' command
case $cmd in
  sel) $parallel $racadm {}-ipmi getsel -o -- $nodelist ;;
  tag) $parallel $racadm {}-ipmi getsvctag -- $nodelist | clean ;;
  tsr)
    # one at the time
    for node in $nodelist; do
      tag=$(${0##./} ${node} tag)
      echo Launching TSR request on the ${node} ${tag} ...
      $racadm ${node}-ipmi  techsupreport collect -t SysInfo,TTYLog
      echo Check that the TSR report is 100% completed:
      echo "  ${0##./} ${node} jobqueue view -i <Job ID>"
      echo and download it:
      echo "  ${0##./} ${node} techsupreport export -f ${node}.${tag}_$(date +'%Y-%m-%d').zip"
      echo; echo
    done
  ;;
  power*)
    case ${3} in
      on) action='powerup' ;;
      off) action='powerdown' ;;
      cycle) action='powercycle' ;;
      status) action='powerstatus' ;;
    esac
    $parallel $racadm {}-ipmi serveraction $action -- $nodelist | clean
  ;;
  *) $parallel $racadm {}-ipmi $cmd -- $nodelist ;;
esac
