#!/bin/bash

# Node status report: slurm / ssh / ipmi etc
# Expecting a string like 'xx[1,5,8-10],yy12'

# Dependencies: shosts, ipmi: both are from the same repo

# Copyright (C) 2025 ivan.tervanto /at/ aalto.fi
# Released under the GNU General Public License


# expecting a string as an input parameter
(($#!=1)) && { echo "Usage: ${0##./} xx[1,3-6,8],yy4"; exit 1; }

NODES=$1
NODELIST=$(shosts $NODES);


# formating a number of seconds into a string: 'Nd Nh Nm Ns'
when() {
  local time
  time=$1
  date -ud "@$time" +"$(( $time/3600/24 ))d %Hh %Mm %Ss"
}

for node in $NODELIST; do
  echo Status of $node

  # check connectivity first
  if ping -q -n -c 1 -W 2 $node &>/dev/null; then
    echo '..ping: OK'
    if ssh -o ConnectTimeout=4 -q $node exit &> /dev/null; then
      echo '..ssh: OK'
    else echo '..ssh: NOPE'
    fi
  else 
    # if no ping, let us see if the power is up/down
    echo '..ping: NOPE'
    echo '..power status: ' $(ipmi $node power status) 
  fi

  # SLURM part
  REASON="$(sinfo -h -n $node -O reason | awk '$1=$1')"
  if ! [[ "$REASON" == 'none' ]]; then
    echo '..drained: YES'
    echo '..draining state:' $(sinfo -h -n $node -O StateComplete:50)
    echo '..draining reason:' $REASON
  else 
    echo '..drained: NOPE'
  fi

  NUMJOBS="$(squeue -w $node -h 2>/dev/null | wc -l)"
  if (( $NUMJOBS > 0 )); then
    echo '..number of running jobs:' $NUMJOBS
    # timing in seconds
    LASTJOBEND="$(date -d $(squeue -h -w $node -O endtime | sort -V | tail -1) +%s)"
    TIMELEFT="$(( $LASTJOBEND - $(date +%s) ))" 
    echo '..the job(s) will end: ' $(when $TIMELEFT)
  else 
    echo '..number of running jobs: none'
    LASTBUSYTIME=$(date -d "$(scontrol show node $node | sed -n 's/.*LastBusyTime=\([^ ]*\).*/\1/p')" +%s)
    TIMESINCE="$(( $(date +%s) - $LASTBUSYTIME ))" 
    echo '..last time the node had jobs:' $(when $TIMESINCE)
  fi

done
